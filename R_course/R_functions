#Functions
#input - function - output
print(input)
list()
sd() - standard deviation
help(sd) or ?sd
args(sd) - prints arguments of a function sd

#Create own functions
new_function <- args(1,2, conditions etc.) {
body
}

#Example
# Define the interpret function
interpret <- function(num_views) {
  if (num_views > 15) {
print("You're popular!")
return(num_views)
  } else {
print("Try to be more visible!")
return (0)
  }
}
# Call the interpret function twice upon first of l and 2nd of f
interpret(linkedin[1])
interpret(facebook[2])

#lapply function - lapply(function, data)
# The vector pioneers has already been created for you
pioneers <- c("GAUSS:1777", "BAYES:1702", "PASCAL:1623", "PEARSON:1857")
# Split names from birth year
split_math <- strsplit(pioneers, split = ":")
# Convert to lowercase strings: split_low
split_low <- lapply(split_math, tolower)
# Take a look at the structure of split_low
str(split_low)

#Example
# Code from previous exercise:
pioneers <- c("GAUSS:1777", "BAYES:1702", "PASCAL:1623", "PEARSON:1857")
split <- strsplit(pioneers, split = ":")
split_low <- lapply(split, tolower)

# Write function select_first()
select_first <- function(x) {
  x[1]
}

# Apply select_first() over split_low: names
names <- lapply(split_low, select_first)

# Write function select_second()
select_second <- function(x) {
  x[2]
}

# Apply select_second() over split_low: years
years <- lapply(split_low, select_second)
